package com.mattg.viewmodelexample.database.entities;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;
import androidx.room.TypeConverters;

import com.mattg.viewmodelexample.database.AppTypeConverters;
import com.mattg.viewmodelexample.models.MenuItem;

import java.util.List;

import lombok.Getter;
import lombok.Setter;

/**
 * Entity class to represent a locations Menu
 */
@Entity(tableName = "menu_table")
@Getter
@Setter
public class Menu {
    @PrimaryKey(autoGenerate = true)
    private int _id;
    /**
     * Allows for a storage of the last time this table was updated.  Can be used to trigger automatic
     * refreshes from an outside source, or automatic clearing of the data based on time existing.
     */
    @ColumnInfo(name = "updated_at") private String updatedAt;
    /**
     * The location id of this menu (in the case of multiple locations sharing databases?)
     */
    @ColumnInfo(name = "location_id") private String locationId;
    /**
     * A value for a separate id, created elsewhere, to supplement the autogenerated id provided by
     * room.
     */
    @ColumnInfo(name = "menu_id") private String menuId;
    /**
     * Another method of storing a list of MenuItems, just as a JSON string representing that list.
     * This list would have to be retrieved as a whole, and stored in a POJO object to "query", but
     * the application is doing this currently with 2 local databases and a server side database.  If the
     * direct queryable list converters do not work, this is a viable option.
     */
    @ColumnInfo(name = "menu_items") private String menuItems;
    /**
     * This allows for list of objects to be stored in ROOM.  If you look at the {@link AppTypeConverters}
     * class, you will see the provided methods to convert this list of objects to and from a format that ROOM
     * is capable of persisting.
     */
    @TypeConverters(AppTypeConverters.class)
    @ColumnInfo(name = "menuItemList") private List<MenuItem> menuItemList;


    @Override
    public String toString() {
        return "Menu{" +
                "_id=" + _id +
                ", updatedAt='" + updatedAt + '\'' +
                ", locationId='" + locationId + '\'' +
                ", menuId='" + menuId + '\'' +
                ", menuItems='" + menuItems + '\'' +
                ", menuItemList=" + menuItemList +
                '}';
    }

}

